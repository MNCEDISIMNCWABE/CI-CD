name: BigQuery SQL Quality and Deployment

on:
  push:
    branches: [main, develop]
    paths:
      - 'sql/**/*.sql'
  pull_request:
    branches: [main, develop]
    paths:
      - 'sql/**/*.sql'

jobs:
  sql-quality-checks:
    name: SQL Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y jq python3-pip
        pip3 install sqlfluff google-cloud-bigquery
        
    - name: Critical SQL validation
      run: |
        echo "Running essential SQL checks..."
        sqlfluff lint sql/ --dialect bigquery \
          --exclude-rules \
          L031,L032,LT01,LT02,LT05,LT09,LT10,LT11,LT12,LT13 \
          --rules L001,L003,L004,L006,L007,L008,L010,L014,L017,L018,L019,L020,L021,L022,L023,L025,L026,L027,L028,L029,L030,L034,L036,L037,L038,L039,L040,L041,L042,L043,L044,L045,L046,L047,L048,L049,L050,L051,L052,L053,L054,L055,L056,L057,L058,L059,L060
        
    - name: Basic query validation
      run: |
        echo "Running structural validation..."
        for file in sql/*.sql; do
          echo "Validating $file"
          # Check for required BigQuery elements
          if ! grep -qi "CREATE OR REPLACE TABLE" "$file" && \
             ! grep -qi "INSERT INTO" "$file"; then
            echo "::error::Query must specify destination table (CREATE OR REPLACE TABLE or INSERT INTO)"
            exit 1
          fi
          
          # Check for potential SQL injection risks
          if grep -i "EXECUTE IMMEDIATE" "$file" | grep -v "';'"; then
            echo "::error file=$file::High risk: Unsanitized dynamic SQL detected"
            exit 1
          fi
          
          # Verify table references use backticks
          if grep -i "FROM " "$file" | grep -vE "FROM\s+`"; then
            echo "::warning file=$file::Table references should use backticks for BigQuery"
          fi
        done

  deploy-queries:
    name: Deploy Queries
    needs: sql-quality-checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up gcloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: hallowed-span-459710-s1

    - name: Set up environment
      run: |
        sudo apt-get install -y jq
        echo "SQL_DIR=$(pwd)/sql" >> $GITHUB_ENV

    - name: Run deployment
      run: |
        chmod +x bash.sh
        ./bash.sh
